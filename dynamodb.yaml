Description: Controle Table Create

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - 
        Label:
          default: About initial data
        Parameters:
          - InitialPut
          - actionId
          - BeautifulLayer

Parameters:
  InitialPut:
    Description: Do you want to put initial data from AWS Docs?
    Type: String
    Default: "yes"
    AllowedValues: ["yes", "no"]
  actionId:
    Description: ActionId
    Type: String
    Default: Invalid
    AllowedValues: ["Invalid", "Single", "Check"]
  BeautifulLayer:
    Description: BeautifulSoup Lambda Layer
    Type: String
    Default: "arn:aws:lambda:ap-northeast-1:770693421928:layer:Klayers-p38-beautifulsoup4:1"

Conditions:
  NeedPut: 
    !Equals ["yes", !Ref InitialPut]

Mappings:
  JaActionId:
    Invalid: 
      Ja: "無効"
    Single: 
      Ja: "単発"
    Check: 
      Ja: "是正"
    
Resources:

  ControleTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ControleTable
      AttributeDefinitions:
        - AttributeName: type
          AttributeType: S
        - AttributeName: typeId
          AttributeType: S
      KeySchema:
        - AttributeName: type
          KeyType: HASH
        - AttributeName: typeId
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1


  LambdaHandler:
    Condition: NeedPut
    Type: Custom::DynamoputLambda
    Properties:
      ServiceToken: !GetAtt "LambdaFunction.Arn"
  LambdaFunction:
    Condition: NeedPut
    Type: AWS::Lambda::Function
    Properties:
      FunctionName : !Join ['-', [!Sub '${AWS::StackName}-Lambda', !Select [0, !Split ['-', !Select [2, !Split ['/', !Ref 'AWS::StackId' ]]]]]]  
      Role: !GetAtt "LambdaExecutionRole.Arn"
      Runtime: "python3.9"
      Handler: index.lambda_handler
      Timeout: "300"
      Layers:
        - !Ref BeautifulLayer
      Environment:
          Variables: 
            actionId : !FindInMap [JaActionId, !Ref actionId, Ja]
      Code:
        ZipFile: |
          import cfnresponse
          import sys
          import os
          

          def lambda_handler(event, context):
            if event['RequestType'] == 'Create':
              from urllib import request
              from bs4 import BeautifulSoup
              import boto3

              url = "https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-fsbp-controls.html"
              with request.urlopen(request.Request(url)) as res:
                  soup = BeautifulSoup(res.read())
              all_h2 = soup.find_all("h2")
              new =[]
              action_id = os.getenv('actionId')
              for i in all_h2:
                  if "[" in i.text:
                      text = i.text
                      text = text.split("]")[0].replace("[","")
                      print(text)
                      new.append(text)
              table = boto3.resource("dynamodb", region_name="ap-northeast-1").Table("ControleTable")
              for controle_id in new:
                table.put_item(Item={"type": "controle_id", "typeId":controle_id, "action_id":action_id})
              cfnresponse.send(event, context, cfnresponse.SUCCESS,
                                      {'Response': 'Success'})
            if event['RequestType'] == 'Delete':
              cfnresponse.send(event, context, cfnresponse.SUCCESS,
                                  {'Response': 'Success'})
            if event['RequestType'] == 'Update':                  
              cfnresponse.send(event, context, cfnresponse.SUCCESS,
                                  {'Response': 'Success'})
  LambdaExecutionRole:
    Condition: NeedPut
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: sample-lambda-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                    - dynamodb:PutItem
                Resource: "*"
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'

Outputs:
  ControleTable:
    Value: !Ref ControleTable
    Export:
      Name: SecurityHub-ControleTable